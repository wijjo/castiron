#!/usr/bin/env python2.7

import sys
import os
import argparse

def add_castiron_lib_to_sys_path():
    # Search for lib/castiron under this file's directory and above.
    d = os.path.dirname(os.path.realpath(sys.argv[0]))
    while True:
        p = os.path.join(d, 'lib', 'castiron')
        if os.path.isdir(p):
            sys.path.insert(0, os.path.dirname(p))
        d0 = d
        d = os.path.dirname(d)
        if not d or d == d0:
            break

add_castiron_lib_to_sys_path()

import castiron

if __name__ == '__main__':
    parser = argparse.ArgumentParser(
        description='Run canned setup configuration to initialize/update a system.')
    parser.add_argument('config_path', type=str, help='.castiron configuration file path')
    parser.add_argument('-n', '--dry-run', action='store_true', dest='dry_run',
                        help='display actions without executing them')
    parser.add_argument('-d', '--dumb-run', action='store_true', dest='dumb_run',
                        help='run actions without optimizing for system state')
    parser.add_argument('-v', '--verbose', action='store_true', dest='verbose',
                        help='display verbose messages')
    args = parser.parse_args()
    try:
        castiron.main.main(args.config_path, dry_run=args.dry_run, dumb_run=args.dumb_run, verbose=args.verbose)
    except KeyboardInterrupt:
        sys.stderr.write('\n<interrupted>\n')
        sys.exit(255)
