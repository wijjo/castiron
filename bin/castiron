#!/usr/bin/env python2.7

import sys
import os
import argparse

def add_castiron_lib_to_sys_path():
    # Search for lib/castiron under this file's directory and above.
    d = os.path.dirname(os.path.realpath(sys.argv[0]))
    while True:
        p = os.path.join(d, 'lib', 'castiron')
        if os.path.isdir(p):
            print p
            sys.path.insert(0, os.path.dirname(p))
        d0 = d
        d = os.path.dirname(d)
        if not d or d == d0:
            break

add_castiron_lib_to_sys_path()

from castiron import tools

def main(runner):
    for function in tools.functions:
        function(runner)

if __name__ == '__main__':
    parser = argparse.ArgumentParser(
        description='Run canned setup configuration to initialize/update a system.')
    parser.add_argument('config_path', type=str, help='.castiron configuration file path')
    parser.add_argument('-n', '--dry-run', action='store_true', dest='dry_run',
                        help='display actions without executing them')
    args = parser.parse_args()
    options = tools.Options(dry_run=args.dry_run)
    execfile(args.config_path)
    runner = tools.Runner(options)
    try:
        main(runner)
    except KeyboardInterrupt:
        sys.stderr.write('\n<interrupted>\n')
        sys.exit(255)
    except Exception, e:
        sys.stderr.write('Action error: %s: %s\n' % (e.__class__.__name__, str(e)))
        sys.exit(255)
